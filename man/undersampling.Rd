% Generated by roxygen2 (4.1.1.9000): do not edit by hand
% Please edit documentation in R/sampling.R
\name{undersampling}
\alias{undersampling}
\title{Undersampling}
\usage{
undersampling(task, lrn, beta, metrics, rdesc = NULL, positive, negative,
  verbose = TRUE, dirPlot = "plot", ncore = 1, type = "within", B = 1)
}
\arguments{
\item{task}{classification task to perform (see mlr package)}

\item{lrn}{learner to use with the task (see mlr package)}

\item{beta}{probability of selecting a negative instance during undersampling}

\item{metrics}{metrics to asess classification performances}

\item{rdesc}{resampling methods to use (see mlr package)}

\item{positive}{value of the positive (minority) class}

\item{negative}{value of the negative (majority) class}

\item{verbose}{print extra information (logical variable)}

\item{dirPlot}{directory where to save plots}

\item{ncore}{number of cores to use in multicore computation}

\item{type}{way to apply undersampling: within or before the CV}

\item{B}{number of models to create for each fold of the CV}
}
\value{
The function returns a list:
\item{under}{results with undersampling}
\item{cal}{results after calibration}
\item{pred.under}{predictions with undersampling}
\item{pred.cal}{predictions after calibration}
\item{prob}{posterior probability of the classifier for the positive class}
}
\description{
Undersampling the majority class with rate = beta, where beta is the probability of selecting a negative instance during undersampling.
The probability estimate is calibrated to adjust it for class prior change
}
\examples{
task <- makeClassifTask(id="class", data=pima, target=Y, positive=1)
res <- undersampling(task, lrn, beta, metrics, positive=1, negative=0)
}

